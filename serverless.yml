service: java-serverless-crud-aws-lambda
app: java-serverless-crud-aws-lambda
org: milanobrenovic

frameworkVersion: "3"

# Cloud configuration
provider:
  name: aws
  runtime: java17
  stage: dev
  region: eu-central-1

  # Environment variables
  environment:
    REGION: ${opt:region, self:provider.region}
    AUTHOR_TABLE: author-${opt:stage, self:provider.stage}

  # IAM roles to access DynamoDB tables
  iam:
    role:
      statements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          - !GetAtt AuthorDynamoDBTable.Arn

# Packaging information
package:
  artifact: build/distributions/java-serverless-crud-aws-lambda.zip

# Resources
resources:
  Resources:
    AuthorDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.AUTHOR_TABLE}

# Custom Lambda functions for the API
functions:
  base_api:
    handler: com.serverless.Handler
    events:
      - httpApi:
          path: /
          method: get

  author_create:
    handler: com.serverless.handler.PostHandler
    events:
      - httpApi:
          path: /api/v1/authors
          method: post

  author_get:
    handler: com.serverless.handler.GetHandler
    events:
      - httpApi:
          path: /api/v1/authors
          method: get

  author_put:
    handler: com.serverless.handler.PutHandler
    events:
      - httpApi:
          path: /api/v1/authors/{authorId}
          method: put
